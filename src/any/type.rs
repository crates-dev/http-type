use crate::*;

pub type BoxAny = Box<dyn Any>;
pub type OptionBoxAny = Option<BoxAny>;
pub type RcAny = Rc<dyn Any>;
pub type OptionRcAny = Option<RcAny>;
pub type ArcAny = Arc<dyn Any>;
pub type OptionArcAny = Option<ArcAny>;
pub type BoxAnySend = Box<dyn Any + Send>;
pub type OptionBoxAnySend = Option<BoxAnySend>;
pub type RcAnySend = Rc<dyn Any + Send>;
pub type OptionRcAnySend = Option<RcAnySend>;
pub type ArcAnySend = Arc<dyn Any + Send>;
pub type OptionArcAnySend = Option<ArcAnySend>;
pub type BoxAnySync = Box<dyn Any + Sync>;
pub type OptionBoxAnySync = Option<BoxAnySync>;
pub type RcAnySync = Rc<dyn Any + Sync>;
pub type OptionRcAnySync = Option<RcAnySync>;
pub type ArcAnySync = Arc<dyn Any + Sync>;
pub type OptionArcAnySync = Option<ArcAnySync>;
pub type BoxAnySendSync = Box<dyn Any + Send + Sync>;
pub type OptionBoxAnySendSync = Option<BoxAnySendSync>;
pub type RcAnySendSync = Rc<dyn Any + Send + Sync>;
pub type OptionRcAnySendSync = Option<RcAnySendSync>;
pub type ArcAnySendSync = Arc<dyn Any + Send + Sync>;
pub type OptionArcAnySendSync = Option<ArcAnySendSync>;
